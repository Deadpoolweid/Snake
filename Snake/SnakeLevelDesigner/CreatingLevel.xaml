<Window x:Class="SnakeLevelDesigner.CreatingLevel"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SnakeLevelDesigner"
        mc:Ignorable="d"
        Title="CreatingLevel"  MinHeight="360" MinWidth="360"
        WindowStartupLocation="CenterScreen" ResizeMode="CanMinimize" Loaded="CreatingLevel_OnLoaded"
        Closing="CreatingLevel_OnClosing"
        >
    <Window.Resources>
        <Style TargetType="Label">
            <Setter Property="Height" Value="30"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="Padding" Value="0"></Setter>
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="Height" Value="20"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="MinWidth" Value="50"/>
            <Setter Property="Height" Value="25"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="MaxHeight" Value="25"/>
            <Setter Property="Padding" Value="2"/>
        </Style>

        <Style x:Key="RoundProgressBarStyle" TargetType="{x:Type ProgressBar}"
       xmlns:sys="clr-namespace:System;assembly=mscorlib">
            <Style.Resources>
                <local:RoundProgressPathConverter x:Key="Conv"/>
                <!-- нам понадобится пара констант -->
                <!-- доля рабиуса для внутренней части -->
                <sys:Double x:Key="RelativeThickness">0.75</sys:Double>
                <!-- просто 0 -->
                <sys:Double x:Key="Zero">0.0</sys:Double>
                <!-- просто 1 -->
                <sys:Double x:Key="One">1.0</sys:Double>
                <!-- какой процент рисовать для неопределённого состояния -->
                <sys:Double x:Key="IndeterminatePart">0.25</sys:Double>
                <!-- обычно прогресс по умолчанию зелёный -->
                <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
                <!-- стандартный фон -->
                <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
                <!-- стандартный цвет границы -->
                <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
            </Style.Resources>
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ProgressBar}">
                        <Grid x:Name="TemplateRoot">
                            <!-- в неопределённом состоянии запускаем вращающуюся анимацию -->
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Determinate"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard RepeatBehavior="Forever">
                                            <DoubleAnimation 
                                        Storyboard.TargetProperty="(UIElement.RenderTransform).(RotateTransform.Angle)"
                                        Storyboard.TargetName="Animation"
                                        From="0" To="360" Duration="0:0:2"/>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>

                            <!-- это фон, красим его в цвет фона-->
                            <Path Fill="{TemplateBinding Background}" Stretch="Uniform"
                          Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource Conv}"
                                          ConverterParameter="{StaticResource RelativeThickness}">
                                        <!-- val=1, min=0, max=1 даёт полный круг -->
                                        <Binding Source="{StaticResource One}"/>
                                        <Binding Source="{StaticResource Zero}"/>
                                        <Binding Source="{StaticResource One}"/>
                                    </MultiBinding>
                                </Path.Data>
                            </Path>
                            <Path Fill="{TemplateBinding Foreground}" Stretch="Uniform" Name="Indicator">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource Conv}"
                                          ConverterParameter="{StaticResource RelativeThickness}">
                                        <Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                        <Binding Path="Maximum" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    </MultiBinding>
                                </Path.Data>
                            </Path>
                            <!-- это анимировнная штука, будет показываться в неопределённом состоянии -->
                            <Path Fill="{TemplateBinding Foreground}" Stretch="Uniform" Name="Animation"
                          Visibility="Collapsed" RenderTransformOrigin="0.5,0.5">
                                <Path.Data>
                                    <MultiBinding Converter="{StaticResource Conv}"
                                          ConverterParameter="{StaticResource RelativeThickness}">
                                        <Binding Source="{StaticResource IndeterminatePart}"/>
                                        <Binding Source="{StaticResource Zero}"/>
                                        <Binding Source="{StaticResource One}"/>
                                    </MultiBinding>
                                </Path.Data>
                                <!-- положим пустое вращение, чтобы к нему цеплялась анимация -->
                                <Path.RenderTransform>
                                    <RotateTransform/>
                                </Path.RenderTransform>
                            </Path>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <!-- в случае неопределённого состояния уберём нормальный индикатор и покажем анимацию -->
                            <Trigger Property="IsIndeterminate" Value="true">
                                <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                                <Setter Property="Visibility" TargetName="Animation" Value="Visible"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition></RowDefinition>
            <RowDefinition Height="1.2*"></RowDefinition>
            <RowDefinition></RowDefinition>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>

        <Label>Map Width</Label>
        <TextBox Name="tMapWidth" Grid.Row="0" Grid.Column="1" TextChanged="OnTextChanged" FocusManager.FocusedElement="{Binding RelativeSource={RelativeSource Self}}"></TextBox>

        <Label Grid.Row="1">Map Height</Label>
        <TextBox Name="tMapHeight" Grid.Row="1" Grid.Column="1" TextChanged="OnTextChanged"></TextBox>

        <Label Grid.Row="2">Finishing score</Label>
        <TextBox Name="tFinishingScore" Grid.Row="2" Grid.Column="1" TextChanged="OnTextChanged"></TextBox>

        <Label Grid.Row="3">Direction</Label>
        <ComboBox Name="cbDirection" Grid.Row="3" Grid.Column="1">
            <ComboBoxItem>Up</ComboBoxItem>
            <ComboBoxItem>Left</ComboBoxItem>
            <ComboBoxItem>Right</ComboBoxItem>
            <ComboBoxItem>Down</ComboBoxItem>
        </ComboBox>
        
        <Label Grid.Row="4">Speed</Label>
        <TextBox Name="tSpeed" Grid.Row="4" Grid.Column="1" TextChanged="OnTextChanged"></TextBox>

        <Label Grid.Row="5">Background music</Label>
        <StackPanel Grid.Row="5" Grid.Column="1">
            <Button Click="LoadMusic_Click">Load music</Button>
            <StackPanel Orientation="Horizontal">
                <Button Click="OnPlayStop_Click" >
                    <Image Name="iPlayerButtonImage"></Image>
                </Button>
                <Image Name="iLoading" Margin="3,0,2,0"  MaxHeight="15"></Image>
                <ProgressBar Name="pbLoading" Margin="3,0,2,0" Value="0" Maximum="1"  Height="15" Width="15" 
                 Style="{DynamicResource RoundProgressBarStyle}"
                 Foreground="#241CED" Background="#B849EB"/>
                
                <Label Name="lChoosenFile">Choosen file</Label>
            </StackPanel>
        </StackPanel>

        <Button Grid.Row="6" Name="bCreate"  Click="Create_Click" IsDefault="True">Create</Button>
        <Button Grid.Row="6" Grid.Column="1" Click="Cancel_Click" IsCancel="True">Cancel</Button>
    </Grid>
</Window>
